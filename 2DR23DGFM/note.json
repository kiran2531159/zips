{
  "paragraphs": [
    {
      "text": "%spark\nimport org.apache.commons.io.IOUtils\nimport java.net.URL\nimport java.nio.charset.Charset\nimport java.text.SimpleDateFormat\nimport java.util.Calendar\nimport java.sql.Date\nimport java.sql.Timestamp\nprintln(\"\"\"%html \u003cb\u003e Claims not in workflow que \"\"\")\nval reportPath\u003d\"file:///C:/Users/224597/Documents/CLAIMS/\"\n//UDF\nobject claims_report extends Serializable{\ndef Report: String \u003d {\n    reportPath.concat(\"senario_1.a.1_consolidated_report.csv\")\n  }\ndef Report_1: String \u003d {\n    reportPath.concat(\"senario_1.b.1_consolidated_xc_report.csv\")\n  }\ndef getDate(x:Any) : Date \u003d {\n    val format \u003d new SimpleDateFormat(\"yyyy-MM-dd\")\n    if (x.toString() \u003d\u003d \"\") \n    return null\n    else {\n        val d \u003d format.parse(x.toString());\n        return new java.sql.Date(d.getTime())\n    }\n}\n}\nval claims_batch \u003d sc.parallelize(IOUtils.toString(new URL(claims_report.Report),Charset.forName(\"utf8\")).split(\"\\n\"))\nval claims_batch_xc \u003d sc.parallelize(IOUtils.toString(new URL(claims_report.Report_1),Charset.forName(\"utf8\")).split(\"\\n\"))\n\ncase class Balance_Report(COUNT_OF_CLAIMS:String,WF_COUNT_OF_CLAIMS:String ,CLAIMS_DATE:java.sql.Date,CLAIM_TB_STS:String,WF_CLAIMS_DATE:java.sql.Date,WF_CLAIM_TB_STS:String,DIFF:String,Type:String)\nval claims_details \u003d claims_batch.map(s\u003d\u003es.split(\",\")).filter(s\u003d\u003es(0)!\u003d\"\\\"COUNT_OF_CLAIMS\\\"\").map(\n    s\u003d\u003eBalance_Report(\n        s(0).replaceAll(\"\\\"\", \"\"), \n        s(1).replaceAll(\"\\\"\", \"\"),\n        claims_report.getDate(s(2)),\n        s(3).replaceAll(\"\\\"\", \"\"),\n        claims_report.getDate(s(4)),\n        s(5).replaceAll(\"\\\"\", \"\"),\n        s(6).replaceAll(\"\\\"\", \"\"),\n        \"non-XC\"\n        )\n)\nval claims_details_xc \u003d claims_batch_xc.map(s\u003d\u003es.split(\",\")).filter(s\u003d\u003es(0)!\u003d\"\\\"COUNT_OF_CLAIMS\\\"\").map(\n    s\u003d\u003eBalance_Report(\n        s(0).replaceAll(\"\\\"\", \"\"), \n        s(1).replaceAll(\"\\\"\", \"\"),\n        claims_report.getDate(s(2)),\n        s(3).replaceAll(\"\\\"\", \"\"),\n        claims_report.getDate(s(4)),\n        s(5).replaceAll(\"\\\"\", \"\"),\n        s(6).replaceAll(\"\\\"\", \"\"),\n        \"XC\"\n        )\n)\nclaims_details.toDF().registerTempTable(\"claims_batch\")\nclaims_details_xc.toDF().registerTempTable(\"claims_batch_XC\")\nvar claims_result\u003d claims_details.toDF().sqlContext.sql(s\"select sum(cast(DIFF as Int)) AS MISSING_COUNT, WF_CLAIMS_DATE as DATE ,WF_CLAIM_TB_STS AS CLAIM_STATUS,Type from claims_batch GROUP BY WF_CLAIMS_DATE ,CLAIM_STATUS,Type ORDER BY WF_CLAIMS_DATE\")\nvar claims_result_xc\u003d claims_details_xc.toDF().sqlContext.sql(s\"select sum(cast(DIFF as Int)) AS MISSING_COUNT, WF_CLAIMS_DATE as DATE ,WF_CLAIM_TB_STS AS CLAIM_STATUS,Type from claims_batch_XC  GROUP BY WF_CLAIMS_DATE ,CLAIM_STATUS,Type ORDER BY WF_CLAIMS_DATE\")\n\nz.show(claims_result.unionAll(claims_result_xc))\n",
      "user": "anonymous",
      "dateUpdated": "2018-10-01 16:31:31.859",
      "config": {
        "colWidth": 4.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false
            }
          },
          "1": {
            "graph": {
              "mode": "multiBarChart",
              "height": 300.0,
              "optionOpen": true,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "COUNT_OF_CLAIMS": "string",
                      "WF_COUNT_OF_CLAIMS": "string",
                      "CLAIMS_DATE": "string",
                      "CLAIM_TB_STS": "string",
                      "WF_CLAIMS_DATE": "string",
                      "WF_CLAIM_TB_STS": "string",
                      "DIFF": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default",
                  "stacked": true
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "DATE",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ],
              "groups": [
                {
                  "name": "Type",
                  "index": 3.0,
                  "aggr": "sum"
                }
              ],
              "values": [
                {
                  "name": "MISSING_COUNT",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": false,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cb\u003e Claims not in workflow que \r\n"
          },
          {
            "type": "TABLE",
            "data": "MISSING_COUNT\tDATE\tCLAIM_STATUS\tType\n1\t2018-08-02\t11\tnon-XC\n1\t2018-08-06\t11\tnon-XC\n2\t2018-08-08\t11\tnon-XC\n1\t2018-08-08\t15\tnon-XC\n1\t2018-08-10\t15\tnon-XC\n1\t2018-08-15\t11\tnon-XC\n1\t2018-08-17\t11\tnon-XC\n3\t2018-08-20\t11\tnon-XC\n1\t2018-08-21\t11\tnon-XC\n1\t2018-08-23\t11\tnon-XC\n4\t2018-08-24\t11\tnon-XC\n1\t2018-08-28\t11\tnon-XC\n2\t2018-08-29\t15\tnon-XC\n1\t2018-08-29\t11\tnon-XC\n1\t2018-08-30\t11\tnon-XC\n2\t2018-08-31\t11\tnon-XC\n1\t2018-09-02\t11\tnon-XC\n3\t2018-09-04\t11\tnon-XC\n1\t2018-09-06\t11\tnon-XC\n1\t2018-09-07\t11\tnon-XC\n8\t2018-09-10\t11\tnon-XC\n6\t2018-09-11\t11\tnon-XC\n4\t2018-09-12\t11\tnon-XC\n1\t2018-09-13\t11\tnon-XC\n2\t2018-09-14\t11\tnon-XC\n2\t2018-09-16\t11\tnon-XC\n1\t2018-09-17\t15\tnon-XC\n1\t2018-09-17\t11\tnon-XC\n3\t2018-09-18\t11\tnon-XC\n22\t2018-09-19\t11\tnon-XC\n1\t2018-08-02\t15\tXC\n1\t2018-08-10\t15\tXC\n1\t2018-08-14\t15\tXC\n1\t2018-08-22\t15\tXC\n3\t2018-08-23\t15\tXC\n1\t2018-08-27\t15\tXC\n1\t2018-08-28\t15\tXC\n1\t2018-08-29\t15\tXC\n7\t2018-09-06\t15\tXC\n1\t2018-09-10\t15\tXC\n1\t2018-09-12\t15\tXC\n1\t2018-09-13\t15\tXC\n1\t2018-09-17\t15\tXC\n41\t2018-09-18\t15\tXC\n13\t2018-09-19\t15\tXC\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1537471511416_-567658593",
      "id": "20180920-152511_1758756591",
      "dateCreated": "2018-09-20 15:25:11.416",
      "dateStarted": "2018-09-25 13:33:56.121",
      "dateFinished": "2018-09-25 13:34:53.053",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nimport java.net.URL\nimport java.nio.charset.Charset\nimport java.text.SimpleDateFormat\nimport java.util.Calendar\nimport java.sql.Date\nimport java.sql.Timestamp\nprintln(\"\"\"%html \u003cb\u003e Get the CLAIM based on date \"\"\")\nvar clcl_date\u003dclaims_report.getDate(z.input(\"Claims date\", \"2019-01-01\"))\nval claims_batch1 \u003d sc.parallelize(IOUtils.toString(new URL(\"file:///C:/Users/224597/Documents/CLAIMS/senario_1.a.2_missing_claim_details.csv\"),Charset.forName(\"utf8\")).split(\"\\n\"))\nval header \u003d claims_batch1.first()\ncase class Balance_Report2(CLAIMS:String, DATE_OF_CLAIMS:java.sql.Date ,CLAIM_STS:String )\nval claims_details1 \u003d claims_batch1.map(s\u003d\u003es.split(\",\")).filter(s\u003d\u003es !\u003dheader).map(\n    s\u003d\u003eBalance_Report2(\n        s(0).replaceAll(\"\\\"\", \"\"), \n        claims_report.getDate(s(1)),\n        s(2).replaceAll(\"\\\"\", \"\")\n        )\n)\nclaims_details1.toDF().registerTempTable(\"claims_details\")\nvar claims_result1\u003d claims_details1.toDF().sqlContext.sql(s\"SELECT * from claims_details where DATE_OF_CLAIMS \u003d \u0027$clcl_date\u0027 \")\nz.show(claims_result1)",
      "user": "anonymous",
      "dateUpdated": "2018-09-26 14:55:07.915",
      "config": {
        "colWidth": 4.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "CLAIMS": "string",
                      "DATE_OF_CLAIMS": "string",
                      "CLAIM_STS": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {
          "Claims date": "2018-08-20"
        },
        "forms": {
          "Claims date": {
            "type": "TextBox",
            "name": "Claims date",
            "displayName": "Claims date",
            "defaultValue": "2019-01-01",
            "hidden": false
          }
        }
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cb\u003e Get the CLAIM based on date \r\n"
          },
          {
            "type": "TABLE",
            "data": "CLAIMS\tDATE_OF_CLAIMS\tCLAIM_STS\n18232F197000\t2018-08-20\t11\r\n18232A074400\t2018-08-20\t11\r\n18232E766900\t2018-08-20\t11\r\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1537390479283_1669819764",
      "id": "20180919-165439_406696797",
      "dateCreated": "2018-09-19 16:54:39.283",
      "dateStarted": "2018-09-25 13:40:28.416",
      "dateFinished": "2018-09-25 13:40:40.300",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nimport java.net.URL\nimport java.nio.charset.Charset\nimport java.text.SimpleDateFormat\nimport java.util.Calendar\nimport java.sql.Date\nimport java.sql.Timestamp\nprintln(\"\"\"%html \u003cb\u003e Claims in workflow missing in Claims table\"\"\")\nval claims_batch2 \u003d sc.parallelize(IOUtils.toString(new URL(\"file:///C:/Users/224597/Documents/CLAIMS/senario_2_claims_in_wf_missing_in_cl_tbl.csv\"),Charset.forName(\"utf8\")).split(\"\\n\"))\nval header \u003d claims_batch1.first()\ncase class Balance_Report3(WQMS_MESSAGE_ID:String ,WQMS_PRIORITY:String,WQMS_STATUS:String,WQMS_RECEIVED_DT :java.sql.Date )\nval claims_details2 \u003d claims_batch2.map(s\u003d\u003es.split(\",\")).filter(s\u003d\u003es !\u003dheader).map(\n    s\u003d\u003eBalance_Report3(\n        s(0).replaceAll(\"\\\"\", \"\"), \n        s(1).replaceAll(\"\\\"\", \"\"), \n        s(2).replaceAll(\"\\\"\", \"\"), \n        claims_report.getDate(s(3))\n        )\n)\nclaims_details2.toDF().registerTempTable(\"claims_details3\")\nvar claims_result2\u003d claims_details2.toDF().sqlContext.sql(s\"SELECT count(WQMS_MESSAGE_ID) as COUNT_OF_CLAIMS,WQMS_PRIORITY  , WQMS_RECEIVED_DT from claims_details3 GROUP BY WQMS_PRIORITY, WQMS_RECEIVED_DT ORDER BY WQMS_RECEIVED_DT\")\nz.show(claims_result2)",
      "user": "anonymous",
      "dateUpdated": "2018-09-20 14:15:07.020",
      "config": {
        "colWidth": 4.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "1": {
            "graph": {
              "mode": "scatterChart",
              "height": 300.0,
              "optionOpen": true,
              "setting": {
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default",
                  "stacked": false
                },
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "COUNT_OF_CLAIMS": "string",
                      "PRIORITY": "string",
                      "WQMS_RECEIVED_DT": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "scatterChart": {
                  "xAxis": {
                    "name": "WQMS_RECEIVED_DT",
                    "index": 2.0,
                    "aggr": "sum"
                  },
                  "yAxis": {
                    "name": "COUNT_OF_CLAIMS",
                    "index": 0.0,
                    "aggr": "sum"
                  },
                  "group": {
                    "name": "WQMS_PRIORITY",
                    "index": 1.0,
                    "aggr": "sum"
                  }
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default",
                  "isDateFormat": true,
                  "forceY": true
                }
              },
              "keys": [
                {
                  "name": "WQMS_PRIORITY",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ],
              "groups": [
                {
                  "name": "WQMS_RECEIVED_DT",
                  "index": 2.0,
                  "aggr": "sum"
                }
              ],
              "values": [
                {
                  "name": "COUNT_OF_CLAIMS",
                  "index": 0.0,
                  "aggr": "count"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {
          "Claims date": "2019-01-01"
        },
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cb\u003e Claims in workflow missing in Claims table\r\n"
          },
          {
            "type": "TABLE",
            "data": "COUNT_OF_CLAIMS\tWQMS_PRIORITY\tWQMS_RECEIVED_DT\n1\t1\t2016-02-15\n1\t1\t2016-02-26\n1\t1\t2016-03-10\n1\t1\t2016-03-11\n3\t1\t2016-03-12\n1\t1\t2016-03-16\n1\t1\t2016-03-21\n1\t1\t2016-03-25\n1\t1\t2016-04-05\n1\t1\t2016-05-16\n1\t1\t2016-05-20\n2\t1\t2016-09-29\n1\t3\t2016-12-07\n1\t3\t2017-03-14\n1\t1\t2017-10-11\n1\t1\t2017-10-27\n1\t1\t2017-10-31\n1\t3\t2017-11-06\n1\t3\t2018-01-11\n1\t1\t2018-02-05\n1\t3\t2018-02-07\n1\t1\t2018-02-28\n1\t1\t2018-03-02\n1\t1\t2018-03-08\n1\t1\t2018-03-09\n1\t3\t2018-03-11\n1\t1\t2018-03-21\n1\t1\t2018-03-22\n2\t1\t2018-03-27\n3\t1\t2018-03-29\n1\t1\t2018-04-01\n2\t1\t2018-04-02\n1\t1\t2018-04-13\n1\t1\t2018-04-16\n3\t1\t2018-04-19\n1\t3\t2018-04-21\n1\t3\t2018-04-25\n1\t1\t2018-05-01\n1\t3\t2018-05-02\n1\t1\t2018-05-07\n2\t1\t2018-05-10\n3\t3\t2018-05-10\n2\t1\t2018-05-11\n1\t3\t2018-05-14\n3\t1\t2018-05-15\n2\t3\t2018-05-15\n1\t1\t2018-05-16\n2\t1\t2018-05-17\n1\t3\t2018-05-18\n1\t3\t2018-05-21\n2\t1\t2018-05-21\n1\t1\t2018-05-22\n4\t3\t2018-05-23\n1\t1\t2018-05-23\n1\t3\t2018-05-24\n1\t3\t2018-05-26\n1\t1\t2018-05-27\n3\t1\t2018-05-29\n2\t3\t2018-05-29\n5\t3\t2018-05-31\n1\t1\t2018-05-31\n2\t1\t2018-06-01\n3\t3\t2018-06-01\n3\t3\t2018-06-04\n3\t1\t2018-06-05\n1\t3\t2018-06-05\n2\t1\t2018-06-06\n1\t3\t2018-06-06\n4\t3\t2018-06-07\n1\t1\t2018-06-07\n2\t3\t2018-06-08\n1\t1\t2018-06-08\n2\t3\t2018-06-11\n2\t1\t2018-06-11\n1\t3\t2018-06-12\n7\t1\t2018-06-12\n4\t1\t2018-06-13\n3\t3\t2018-06-14\n2\t1\t2018-06-14\n2\t1\t2018-06-15\n2\t3\t2018-06-18\n5\t1\t2018-06-18\n1\t1\t2018-06-19\n1\t1\t2018-06-20\n2\t1\t2018-06-21\n3\t1\t2018-06-22\n1\t3\t2018-06-25\n3\t1\t2018-06-25\n7\t1\t2018-06-26\n1\t3\t2018-06-27\n6\t1\t2018-06-28\n7\t1\t2018-06-29\n1\t1\t2018-07-02\n8\t1\t2018-07-03\n1\t3\t2018-07-05\n1\t1\t2018-07-05\n4\t1\t2018-07-06\n1\t3\t2018-07-06\n5\t1\t2018-07-09\n7\t1\t2018-07-10\n1\t3\t2018-07-11\n3\t1\t2018-07-11\n5\t1\t2018-07-12\n1\t1\t2018-07-13\n1\t1\t2018-07-14\n4\t1\t2018-07-16\n3\t1\t2018-07-17\n4\t1\t2018-07-18\n1\t1\t2018-07-19\n6\t1\t2018-07-20\n1\t3\t2018-07-20\n1\t3\t2018-07-21\n25\t1\t2018-07-23\n18\t1\t2018-07-24\n1\t3\t2018-07-24\n12\t1\t2018-07-25\n8\t1\t2018-07-26\n23\t1\t2018-07-27\n9\t1\t2018-07-28\n40\t1\t2018-07-30\n46\t1\t2018-07-31\n41\t1\t2018-08-01\n40\t1\t2018-08-02\n24\t1\t2018-08-03\n1\t3\t2018-08-03\n46\t1\t2018-08-06\n25\t1\t2018-08-07\n25\t1\t2018-08-08\n1\t3\t2018-08-08\n36\t1\t2018-08-09\n63\t1\t2018-08-10\n63\t1\t2018-08-13\n70\t1\t2018-08-14\n48\t1\t2018-08-15\n1\t3\t2018-08-16\n57\t1\t2018-08-16\n33\t1\t2018-08-17\n83\t1\t2018-08-20\n1\t3\t2018-08-20\n2\t3\t2018-08-21\n63\t1\t2018-08-21\n5\t3\t2018-08-22\n46\t1\t2018-08-22\n63\t1\t2018-08-23\n46\t1\t2018-08-24\n9\t1\t2018-08-25\n9\t3\t2018-08-27\n88\t1\t2018-08-27\n11\t3\t2018-08-28\n44\t1\t2018-08-28\n6\t3\t2018-08-29\n47\t1\t2018-08-29\n78\t1\t2018-08-30\n9\t3\t2018-08-30\n47\t1\t2018-08-31\n8\t3\t2018-08-31\n1\t1\t2018-09-02\n32\t1\t2018-09-03\n2\t3\t2018-09-03\n37\t1\t2018-09-04\n9\t3\t2018-09-04\n16\t3\t2018-09-05\n30\t1\t2018-09-05\n7\t3\t2018-09-06\n121\t1\t2018-09-06\n116\t1\t2018-09-07\n9\t3\t2018-09-07\n3\t3\t2018-09-08\n112\t1\t2018-09-10\n19\t3\t2018-09-10\n17\t3\t2018-09-11\n110\t1\t2018-09-11\n80\t1\t2018-09-12\n282\t3\t2018-09-12\n110\t1\t2018-09-13\n270\t3\t2018-09-13\n38\t3\t2018-09-14\n68\t1\t2018-09-14\n1\t3\t2018-09-15\n12\t3\t2018-09-16\n756\t3\t2018-09-17\n195\t1\t2018-09-17\n134\t1\t2018-09-18\n852\t3\t2018-09-18\n62\t1\t2018-09-19\n607\t3\t2018-09-19\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1537460878202_-738938665",
      "id": "20180920-122758_1074792433",
      "dateCreated": "2018-09-20 12:27:58.202",
      "dateStarted": "2018-09-24 08:35:08.373",
      "dateFinished": "2018-09-24 08:35:22.976",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nimport java.net.URL\nimport java.nio.charset.Charset\nimport java.text.SimpleDateFormat\nimport java.util.Calendar\nimport java.sql.Date\nimport java.sql.Timestamp\nprintln(\"\"\"%html \u003cb\u003e Claims Drag date Analytics\"\"\")\nvar clcl_start_date\u003dclaims_report.getDate(z.input(\"Claims start date\", \"2018-01-01\"))\nvar clcl_end_date\u003dclaims_report.getDate(z.input(\"Claims end date\", \"2019-01-01\"))\nval claims_batch3 \u003d sc.parallelize(IOUtils.toString(new URL(\"file:///C:/Users/224597/Documents/CLAIMS/senario_3_claims_past_drag_dt.csv\"),Charset.forName(\"utf8\")).split(\"\\n\"))\nval claims_future \u003d sc.parallelize(IOUtils.toString(new URL(\"file:///C:/Users/224597/Documents/CLAIMS/senario_3.c_claims_with_future_drag_dt.csv\"),Charset.forName(\"utf8\")).split(\"\\n\"))\n\nval header \u003d claims_batch3.first()\ncase class Balance_Report4(CLAIM_ID:String ,RECEIVED_DT :java.sql.Date,REASON:String )\nval claims_details3 \u003d claims_batch3.map(s\u003d\u003es.split(\",\")).filter(s\u003d\u003es !\u003dheader).map(\n    s\u003d\u003eBalance_Report4(\n        s(0).replaceAll(\"\\\"\", \"\"), \n        claims_report.getDate(s(1)),\n        s(2).replaceAll(\"\\\"\", \"\")\n        )\n)\nval claims_future1 \u003d claims_future.map(s\u003d\u003es.split(\",\")).filter(s\u003d\u003es !\u003dheader).map(\n    s\u003d\u003eBalance_Report4(\n        s(0).replaceAll(\"\\\"\", \"\"), \n        claims_report.getDate(s(1)),\n        s(2).replaceAll(\"\\\"\", \"\")\n        )\n)\nclaims_details3.toDF().registerTempTable(\"claims_details4\")\nclaims_future1.toDF().registerTempTable(\"claims_future2\")\nvar claims_result3\u003d claims_details3.toDF().sqlContext.sql(s\"SELECT count(CLAIM_ID) as COUNT_OF_CLAIMS ,REASON ,RECEIVED_DT FROM  claims_details4 WHERE RECEIVED_DT \u003e\u003d\u0027$clcl_start_date\u0027 and RECEIVED_DT \u003c\u003d\u0027$clcl_end_date\u0027 GROUP BY RECEIVED_DT,REASON ORDER BY RECEIVED_DT\")\nvar claims_result4\u003d claims_future1.toDF().sqlContext.sql(s\"SELECT count(CLAIM_ID) as COUNT_OF_CLAIMS ,REASON ,RECEIVED_DT FROM  claims_future2 WHERE RECEIVED_DT \u003e\u003d\u0027$clcl_start_date\u0027 and RECEIVED_DT \u003c\u003d\u0027$clcl_end_date\u0027 GROUP BY RECEIVED_DT,REASON ORDER BY RECEIVED_DT\")\nz.show(claims_result3.union(claims_result4))",
      "user": "anonymous",
      "dateUpdated": "2018-09-26 15:40:51.301",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "1": {
            "graph": {
              "mode": "scatterChart",
              "height": 300.0,
              "optionOpen": true,
              "setting": {
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "rotate"
                },
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "COUNT_OF_CLAIMS": "string",
                      "REASON": "string",
                      "RECEIVED_DT": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "pieChart": {},
                "scatterChart": {
                  "xAxis": {
                    "name": "RECEIVED_DT",
                    "index": 2.0,
                    "aggr": "sum"
                  },
                  "yAxis": {
                    "name": "COUNT_OF_CLAIMS",
                    "index": 0.0,
                    "aggr": "sum"
                  },
                  "group": {
                    "name": "REASON",
                    "index": 1.0,
                    "aggr": "sum"
                  }
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "keys": [
                {
                  "name": "RECEIVED_DT",
                  "index": 2.0,
                  "aggr": "sum"
                }
              ],
              "groups": [
                {
                  "name": "RECEIVED_DT",
                  "index": 2.0,
                  "aggr": "sum"
                }
              ],
              "values": [
                {
                  "name": "COUNT_OF_CLAIMS",
                  "index": 0.0,
                  "aggr": "count"
                }
              ],
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {
          "Claims start date": "2018-06-01",
          "Claims end date": "2018-09-30"
        },
        "forms": {
          "Claims start date": {
            "type": "TextBox",
            "name": "Claims start date",
            "displayName": "Claims start date",
            "defaultValue": "2018-01-01",
            "hidden": false
          },
          "Claims end date": {
            "type": "TextBox",
            "name": "Claims end date",
            "displayName": "Claims end date",
            "defaultValue": "2019-01-01",
            "hidden": false
          }
        }
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cb\u003e Claims Drag date Analytics\r\n"
          },
          {
            "type": "TABLE",
            "data": "COUNT_OF_CLAIMS\tREASON\tRECEIVED_DT\n1\tSystem Generated\r\t2018-06-17\n1\tSystem Generated\r\t2018-06-21\n1\tSystem Generated\r\t2018-06-22\n2\tSystem Generated\r\t2018-06-23\n1\tSystem Generated\r\t2018-06-29\n1\tSystem Generated\r\t2018-06-30\n1\tSystem Generated\r\t2018-07-01\n1\tSystem Generated\r\t2018-07-04\n1\tSystem Generated\r\t2018-07-08\n2\tSystem Generated\r\t2018-07-12\n1\tSystem Generated\r\t2018-07-14\n1\tSystem Generated\r\t2018-07-15\n1\tSystem Generated\r\t2018-07-16\n1\tSystem Generated\r\t2018-07-25\n1\tSystem Generated\r\t2018-07-26\n1\tSystem Generated\r\t2018-07-27\n2\tSystem Generated\r\t2018-07-28\n4\tSystem Generated\r\t2018-07-29\n1\tSystem Generated\r\t2018-08-02\n2\tSystem Generated\r\t2018-08-03\n2\tSystem Generated\r\t2018-08-04\n4\tSystem Generated\r\t2018-08-05\n2\tSystem Generated\r\t2018-08-06\n1\tSystem Generated\r\t2018-08-08\n3\tSystem Generated\r\t2018-08-09\n3\tSystem Generated\r\t2018-08-10\n6\tSystem Generated\r\t2018-08-11\n6\tSystem Generated\r\t2018-08-12\n9\tSystem Generated\r\t2018-08-13\n7\tSystem Generated\r\t2018-08-16\n4\tSystem Generated\r\t2018-08-17\n2\tSystem Generated\r\t2018-08-18\n7\tSystem Generated\r\t2018-08-19\n5\tSystem Generated\r\t2018-08-20\n3\tSystem Generated\r\t2018-08-22\n8\tSystem Generated\r\t2018-08-23\n3\tSystem Generated\r\t2018-08-24\n4\tSystem Generated\r\t2018-08-25\n2\tSystem Generated\r\t2018-08-26\n4\tSystem Generated\r\t2018-08-27\n3\tSystem Generated\r\t2018-08-30\n5\tSystem Generated\r\t2018-08-31\n4\tSystem Generated\r\t2018-09-01\n3\tOverridden On Claim\r\t2018-09-02\n6\tSystem Generated\r\t2018-09-02\n5\tSystem Generated\r\t2018-09-03\n1\tSystem Generated\r\t2018-09-05\n13\tSystem Generated\r\t2018-09-06\n14\tSystem Generated\r\t2018-09-07\n7\tSystem Generated\r\t2018-09-08\n8\tSystem Generated\r\t2018-09-09\n8\tSystem Generated\r\t2018-09-09\n17\tSystem Generated\r\t2018-09-10\n3\tOverridden On Claim\r\t2018-09-11\n25\tSystem Generated\r\t2018-09-12\n2\tOverridden On Claim\r\t2018-09-12\n1\tOverridden On Claim\r\t2018-09-13\n69\tSystem Generated\r\t2018-09-13\n370\tOverridden On Claim\r\t2018-09-14\n61\tSystem Generated\r\t2018-09-14\n229\tSystem Generated\r\t2018-09-15\n543\tSystem Generated\r\t2018-09-16\n5\tSystem Generated\r\t2018-09-17\n1220\tOverridden On Claim\r\t2018-09-17\n454\tOverridden On Claim\r\t2018-09-18\n1\tOverridden On Claim\r\t2018-09-19\n32617\tSystem Generated\r\t2018-09-19\n26972\tSystem Generated\r\t2018-09-20\n727\tGeneratedby Workflow\r\t2018-09-20\n675\tGeneratedby Workflow\r\t2018-09-21\n23412\tSystem Generated\r\t2018-09-21\n679\tGeneratedby Workflow\r\t2018-09-22\n21525\tSystem Generated\r\t2018-09-22\n22097\tSystem Generated\r\t2018-09-23\n21704\tSystem Generated\r\t2018-09-24\n13382\tSystem Generated\r\t2018-09-27\n2\tGeneratedby Workflow\r\t2018-09-28\n21682\tSystem Generated\r\t2018-09-28\n23657\tSystem Generated\r\t2018-09-29\n1\tGeneratedby Workflow\r\t2018-09-29\n5\tGeneratedby Workflow\r\t2018-09-30\n21420\tSystem Generated\r\t2018-09-30\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1537464809030_-1161722469",
      "id": "20180920-133329_1814052799",
      "dateCreated": "2018-09-20 13:33:29.030",
      "dateStarted": "2018-09-24 15:25:57.663",
      "dateFinished": "2018-09-24 15:26:51.993",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nimport java.net.URL\nimport java.nio.charset.Charset\nimport java.text.SimpleDateFormat\nimport java.util.Calendar\nimport java.sql.Date\nimport java.sql.Timestamp\nprintln(\"\"\"%html \u003cb\u003e Claims which are ready for payment but no check issued \"\"\")\nvar clcl_start_date\u003dclaims_report.getDate(z.input(\"Claims start date\", \"2018-01-01\"))\nvar clcl_end_date\u003dclaims_report.getDate(z.input(\"Claims end date\", \"2019-01-01\"))\nval claims_no_check \u003d sc.parallelize(IOUtils.toString(new URL(\"file:///C:/Users/224597/Documents/CLAIMS/senario_4_claims_02_no_check.csv\"),Charset.forName(\"utf8\")).split(\"\\n\"))\n\nval header \u003d claims_no_check.first()\ncase class claims_no_checkdf(CLAIM_ID:String ,RECEIVED_DT :java.sql.Date)\nval claims_no_check_df \u003d claims_no_check.map(s\u003d\u003es.split(\",\")).filter(s\u003d\u003es !\u003dheader).map(\n    s\u003d\u003eclaims_no_checkdf(\n        s(0).replaceAll(\"\\\"\", \"\"), \n        claims_report.getDate(s(1))\n        )\n)\n\nclaims_no_check_df.toDF().registerTempTable(\"claims_no_checks\")\nvar claims_result5\u003d claims_no_check_df.toDF().sqlContext.sql(s\"SELECT count(CLAIM_ID) as COUNT_OF_CLAIMS ,RECEIVED_DT FROM  claims_no_checks WHERE RECEIVED_DT \u003e\u003d\u0027$clcl_start_date\u0027 and RECEIVED_DT \u003c\u003d\u0027$clcl_end_date\u0027 GROUP BY RECEIVED_DT ORDER BY RECEIVED_DT\")\n\nz.show(claims_result5)",
      "user": "anonymous",
      "dateUpdated": "2018-10-01 16:31:32.219",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "1": {
            "graph": {
              "mode": "multiBarChart",
              "height": 300.0,
              "optionOpen": true,
              "setting": {
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "rotate",
                  "stacked": false
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "RECEIVED_DT",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "COUNT_OF_CLAIMS",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {
          "Claims start date": "2018-01-01",
          "Claims end date": "2019-01-01"
        },
        "forms": {
          "Claims start date": {
            "type": "TextBox",
            "name": "Claims start date",
            "displayName": "Claims start date",
            "defaultValue": "2018-01-01",
            "hidden": false
          },
          "Claims end date": {
            "type": "TextBox",
            "name": "Claims end date",
            "displayName": "Claims end date",
            "defaultValue": "2019-01-01",
            "hidden": false
          }
        }
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cb\u003e Claims which are ready for payment but no check issued \r\n"
          },
          {
            "type": "TABLE",
            "data": "COUNT_OF_CLAIMS\tRECEIVED_DT\n2364\t2018-08-01\n2170\t2018-08-02\n1794\t2018-08-03\n6\t2018-08-04\n626\t2018-08-05\n3002\t2018-08-06\n3009\t2018-08-07\n2460\t2018-08-08\n2425\t2018-08-09\n2268\t2018-08-10\n12\t2018-08-11\n688\t2018-08-12\n2572\t2018-08-13\n3308\t2018-08-14\n2275\t2018-08-15\n2330\t2018-08-16\n2033\t2018-08-17\n6\t2018-08-18\n585\t2018-08-19\n3061\t2018-08-20\n2798\t2018-08-21\n2221\t2018-08-22\n2022\t2018-08-23\n1973\t2018-08-24\n8\t2018-08-25\n643\t2018-08-26\n1639\t2018-08-27\n1385\t2018-08-28\n1208\t2018-08-29\n1204\t2018-08-30\n986\t2018-08-31\n10\t2018-09-01\n747\t2018-09-02\n369\t2018-09-03\n886\t2018-09-04\n1024\t2018-09-05\n1235\t2018-09-06\n906\t2018-09-07\n13\t2018-09-08\n579\t2018-09-09\n930\t2018-09-10\n1033\t2018-09-11\n832\t2018-09-12\n591\t2018-09-13\n197\t2018-09-14\n22\t2018-09-15\n88\t2018-09-16\n39\t2018-09-17\n43\t2018-09-18\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1537467822890_1428423219",
      "id": "20180920-142342_1921490383",
      "dateCreated": "2018-09-20 14:23:42.900",
      "dateStarted": "2018-09-24 14:31:48.194",
      "dateFinished": "2018-09-24 14:32:05.101",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n",
      "user": "anonymous",
      "dateUpdated": "2018-09-20 15:43:03.934",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1537472583934_707784439",
      "id": "20180920-154303_422280480",
      "dateCreated": "2018-09-20 15:43:03.934",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "CLAIMS_ISSUES",
  "id": "2DR23DGFM",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": true,
    "looknfeel": "default",
    "personalizedMode": "false",
    "cronExecutingUser": "",
    "cronExecutingRoles": ""
  },
  "info": {}
}